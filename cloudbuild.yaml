steps:
  # Step 1: Initialize the specific submodule (or all)
  - name: 'gcr.io/cloud-builders/git'
    args: ['submodule', 'init', 'vendor/webrtc'] # Initialize only the one you're changing
    # Or to initialize all: ['submodule', 'init']

  # Step 2: Set the new URL for the submodule
  - name: 'gcr.io/cloud-builders/git'
    args:
      - 'submodule'
      - 'set-url'
      - '--' # Indicates end of options, path and URL follow
      - 'vendor/webrtc' # Path to your submodule
      - 'https://github.com/Kleptine/webrtc.git' # The new HTTPS URL

  # Step 3: Update the submodule (it will now use the overridden URL)
  - name: 'gcr.io/cloud-builders/git'
    args: ['submodule', 'update', '--recursive', 'vendor/webrtc'] # Update the specific submodule
    # Or to update all (including any others): ['submodule', 'update', '--init', '--recursive']

  # Build the image with docker.
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - '$_IMAGE_NAME:$COMMIT_SHA'
      - '-t'
      - '$_IMAGE_NAME:latest'
      - '--cache-from'
      - '$_IMAGE_NAME:latest' # use the latest tagged image to pull cached layers from
      - .
      - '-f'
      - $_DOCKERFILE_NAME
    dir: $_DOCKERFILE_DIR
    id: Build

  # Push the image to GCR
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_IMAGE_NAME:$COMMIT_SHA'
      - '--all-tags'
    id: Push
  
  # Deploy to K8s
  # Currently we just do this through the cloud UI: 
  # - name: gcr.io/cloud-builders/gke-deploy
  #   args:
  #     - prepare
  #     - '--filename=$_K8S_YAML_PATH'
  #     - '--image=$_IMAGE_NAME:$COMMIT_SHA'
  #     - '--app=$_K8S_APP_NAME'
  #     - '--version=$COMMIT_SHA'
  #     - '--namespace=$_K8S_NAMESPACE'
  #     - '--label=$_K8S_LABELS'
  #     - '--annotation=$_K8S_ANNOTATIONS,gcb-build-id=$BUILD_ID'
  #     - '--create-application-cr'
  #     - >-
  #       --links="Build
  #       details=https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID"
  #     - '--output=output'
  #   id: Prepare deploy
  # - name: gcr.io/cloud-builders/gsutil
  #   args:
  #     - '-c'
  #     - |-
  #       if [ "$_OUTPUT_BUCKET_PATH" != "" ]
  #       then
  #         gsutil cp -r output/suggested gs://$_OUTPUT_BUCKET_PATH/config/$_K8S_APP_NAME/$BUILD_ID/suggested
  #         gsutil cp -r output/expanded gs://$_OUTPUT_BUCKET_PATH/config/$_K8S_APP_NAME/$BUILD_ID/expanded
  #       fi
  #   id: Save configs
  #   entrypoint: sh
  # - name: gcr.io/cloud-builders/gke-deploy
  #   args:
  #     - apply
  #     - '--filename=output/expanded'
  #     - '--cluster=$_GKE_CLUSTER'
  #     - '--location=$_GKE_LOCATION'
  #     - '--namespace=$_K8S_NAMESPACE'
  #   id: Apply deploy
images:
  - '$_IMAGE_NAME:$COMMIT_SHA'
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _K8S_NAMESPACE: default
  _DOCKERFILE_NAME: Dockerfile
  _K8S_ANNOTATIONS: gcb-trigger-id=c46d2b10-13c9-4166-9cd3-f6f154a44794
  _K8S_APP_NAME: session-streamer
  _DOCKERFILE_DIR: ''
  _GKE_CLUSTER: autopilot-cluster-1
  _IMAGE_NAME: us-west1-docker.pkg.dev/sessionstreamer/images/session-streamer
  _OUTPUT_BUCKET_PATH: sessionstreamer_cloudbuild/deploy
  _K8S_LABELS: ''
  _K8S_YAML_PATH: kubernetes/
  _GKE_LOCATION: us-central1
tags:
  - gcp-cloud-build-deploy
  - $_K8S_APP_NAME
